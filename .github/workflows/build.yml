name: Development Build

env:
  EMSDK_VERSION: 3.1.58
  EMSDK_CACHE_FOLDER: 'cache/emsdk'

on:
  pull_request:
    branches:
      - main

  workflow_dispatch:

jobs:
  genie:
    name: Build GENie executable
    runs-on: ubuntu-latest
    steps:
      - name: Restore Cached Build Artifact
        id: cache-genie-restore
        uses: actions/cache/restore@v3
        with:
          path: bin/linux/genie
          key: genie-${{ runner.os }}

      - name: Checkout
        if: steps.cache-genie-restore.outputs.cache-hit != 'true'
        id: checkout
        uses: actions/checkout@v3
        with:
          repository: bkaradzic/GENie

      - name: Build
        if: steps.cache-genie-restore.outputs.cache-hit != 'true'
        id: build
        run: make

      - name: Cache Build Artifact
        if: steps.cache-genie-restore.outputs.cache-hit != 'true'
        id: cache-genie
        uses: actions/cache/save@v3
        with:
          path: bin/linux/genie
          key: genie-${{ runner.os }}

  build:
    name: Build Release
    runs-on: ubuntu-latest
    needs: genie
    steps:
      - name: Create Build Cache Directory
        run: mkdir -p cache/

      - name: Enable Emscripten System Library Cache
        id: emscripten-cache
        uses: actions/cache@v3
        with:
          path: ${{env.EMSDK_CACHE_FOLDER}}
          key: ${{env.EMSDK_VERSION}}-${{ runner.os }}

      - name: Install Emscripten
        id: emscripten
        uses: mymindstorm/setup-emsdk@v14
        with:
          version: ${{env.EMSDK_VERSION}}
          actions-cache-folder: ${{env.EMSDK_CACHE_FOLDER}}

      - name: Verify Emsdk
        run: em++ -v

      - name: Checkout
        id: checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Identify dependency versions
        id: dependency-versions
        run: |
          echo "DRACO_VERSION=$( cd external/draco/ && git rev-parse --short HEAD )" >> $GITHUB_ENV
          echo "MANIFOLD_VERSION=$( cd external/manifold/ && git rev-parse --short HEAD )" >> $GITHUB_ENV
          echo "GLTFSDK_VERSION=$( cd external/gltf-sdk/ && git rev-parse --short HEAD )" >> $GITHUB_ENV

      - name: Load Draco from Build Cache
        id: draco-cache
        uses: actions/cache@v3
        with:
          path: build/draco/
          key: draco-${{env.DRACO_VERSION}}-${{ runner.os }}

      - name: Load Manifold from Build Cache
        id: manifold-cache
        uses: actions/cache@v3
        with:
          path: build/manifold/
          key: manifold-${{env.MANIFOLD_VERSION}}-${{ runner.os }}

      - name: Load glTF SDK from Build Cache
        id: gltf-sdk-cache
        uses: actions/cache@v3
        with:
          path: build/gtlf-sdk/
          key: gltf-sdk-${{env.GLTFSDK_VERSION}}-${{ runner.os }}

      - name: Use cached GENie
        id: use-cached-genie
        uses: actions/cache/restore@v3
        with:
          path: bin/linux/genie
          key: genie-${{ runner.os }}

      - name: Generate Makefiles
        id: generate-makefiles
        run: |
          chmod +x ./bin/linux/genie
          ./bin/linux/genie gmake

      # - name: Build Draco
      #   id: build-draco
      #   if: steps.draco-cache.outputs.cache-hit != 'true'
      #   run: |
      #     mkdir -p build/draco
      #     cd build/draco
      #     cmake ../../external/draco
      #     make

      # - name: Build Manifold
      #   id: build-manifold
      #   if: steps.manifold-cache.outputs.cache-hit != 'true'
      #   run: |
      #     mkdir -p build/manifold
      #     cd build/manifold
      #     cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON ../../external/manifold
      #     make

      # - name: Build glTF SDK
      #   id: build-gltf-sdk
      #   if: steps.gltf-sdk-cache.outputs.cache-hit != 'true'
      #   run: |
      #     mkdir -p build/gltf-sdk
      #     cd build/gltf-sdk
      #     cmake -DCMAKE_CXX_STANDARD=14 -DCMAKE_CXX_STANDARD_REQUIRED=on ../../external/gltf-sdk/
      #     make

      # - name: Build Native Artifacts
      #   id: build-native
      #   run: |
      #     cd gmake
      #     make config=release64 conway_geom_native webifc_native

      - name: Build Node
        id: build-node
        run: |
          ls -R $EMSDK
          which em++
#          cd gmake
#          EMSCRIPTEN=$EMSDK/upstream/emscripten make config=releaseemscripten ConwayGeomWasmNode

      - name: Build WASM
        id: build-wasm
        run: |
          cd gmake
          EMSCRIPTEN=$EMSDK/upstream/emscripten make config=releaseemscripten ConwayGeomWasmWeb
